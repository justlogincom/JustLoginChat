plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'maven-publish'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.justlogin.chat'
    compileSdk 31

    defaultConfig {
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    configurations.all {
        resolutionStrategy {
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.7.0'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.0'
            force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.dagger:dagger:2.45'
    kapt 'com.google.dagger:dagger-compiler:2.45'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "androidx.compose.ui:ui-tooling:1.2.0"
    implementation "androidx.compose.ui:ui-util:1.2.0"
    implementation "androidx.compose.material:material:1.2.0"
    implementation "androidx.compose.foundation:foundation:1.2.0"
    implementation "androidx.compose.runtime:runtime-livedata:1.2.0"
    implementation 'androidx.activity:activity-compose:1.7.0'
    implementation 'androidx.activity:activity-ktx:1.2.0'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation("com.squareup.okhttp3:logging-interceptor:4.10.0")
    implementation "com.google.accompanist:accompanist-themeadapter-appcompat:0.31.0-alpha"
    //paging compose
    def paging_version = "3.1.1"

    implementation "androidx.paging:paging-runtime:$paging_version"

    implementation 'androidx.paging:paging-compose:1.0.0-alpha18'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

def LIBRARY_GROUP = "com.justlogin"
def LIBRARY_ARTIFACT_ID = "chat"
def LIBRARY_VERSION_NAME = "1.0.0"
project.afterEvaluate {
    publishToMavenLocal {
        def groupId = LIBRARY_GROUP
        def artifactId = LIBRARY_ARTIFACT_ID
        def versionName = LIBRARY_VERSION_NAME + "-local"
        def debugSuffix = "-debug"
        def releaseSuffix = "-release"
        publishing {
            publications {
                LibraryRelease(MavenPublication) {
                    from components.release
                    artifact(sourceJar)
                    setGroupId groupId
                    setArtifactId artifactId
                    version versionName + releaseSuffix
                }
                LibraryDebug(MavenPublication) {
                    from components.debug
                    artifact(sourceJar)
                    setGroupId groupId
                    setArtifactId artifactId
                    version versionName + debugSuffix
                }
            }
            publications.all {
                pom.withXml {
                    asNode().dependencies.'*'
                            .findAll() {
                                it.scope.text() == 'runtime' &&
                                        project.configurations.implementation.allDependencies.find {
                                            dep -> dep.name == it.artifactId.text()
                                        }
                            }.each { it.scope*.value = 'compile'}
                }
            }
        }

        doLast {
            def prettyPrint = {
                1.upto(100, { print "=" })
                println()
            }
            println()
            prettyPrint()
            println "PUBLICATION FINISHED"
            println "Artifact RELEASE: " + groupId + ":" + artifactId +  ":" + versionName + releaseSuffix
            println "Artifact DEBUG: " + groupId + ":" + artifactId +  ":" + versionName + debugSuffix
            prettyPrint()
        }
    }
}